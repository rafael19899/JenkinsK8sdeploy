name: Deploy Kubernetes Cluster and Jenkins

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up Minikube
        run: |
          sudo apt-get update
          sudo apt-get install -y curl
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          minikube start --driver=docker

      - name: Set up kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Set up Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

      - name: Create namespace for Jenkins
        run: kubectl create namespace jenkins

      - name: Deploy Jenkins
        run: |
          helm repo add jenkins https://charts.jenkins.io
          helm repo update
          helm install jenkins jenkins/jenkins --namespace jenkins

      - name: Wait for Jenkins to be ready
        run: kubectl rollout status deployment/jenkins -n jenkins

      - name: Deploy Blue-Green Node.js app
        run: |
          kubectl apply -f app/k8s-deployment-blue.yaml
          kubectl apply -f app/k8s-deployment-green.yaml

      - name: Verify Deployment
        run: kubectl get all -n jenkins

      - name: Forward port for Jenkins
        run: nohup kubectl port-forward -n jenkins svc/jenkins 8080:8080 &
        
      - name: Forward port for Prometheus and Grafana
        run: |
          nohup kubectl port-forward -n monitoring svc/prometheus-server 8300:9090 &
          nohup kubectl port-forward -n monitoring svc/grafana 8300:3000 &

      - name: Echo Completion Message
        run: echo "Deployment and setup completed successfully"
